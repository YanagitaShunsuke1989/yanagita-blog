---
import Layout from "../../layouts/Layout.astro";
import { getBlogs, getBlogDetail, formatDate } from "../../library/microcms";

// 詳細記事ページの全パスを取得
export async function getStaticPaths() {
  const response = await getBlogs({ fields: ["id"] });
  return response.contents.map((content: any) => ({
    params: {
      blogId: content.id,
    },
  }));
}

//記事の詳細情報を取得
const { blogId } = Astro.params;
const blog = await getBlogDetail(blogId as string);
const PostingTime = formatDate(blog.publishedAt);
const DateTime = formatDate(blog.publishedAt).replaceAll(".", "-");

console.log(blog);
---

<Layout title={blog.title}>
  <main>
    <div class="eyecatch" transition:name=`article-thumbnail-${blogId}`>
      <img src={blog.thumbnail.url} alt={blog.thumbnail.alt} />
    </div>
    <article>
      <p class="time">
        <time class="time" datetime={DateTime}>{PostingTime}</time>
      </p>
      <h1 class="title">{blog.title}</h1>
      <p class="category">{blog.category[0].title}</p>

      <div class="content" set:html={blog.content} />
    </article>
  </main>
</Layout>

<style lang="scss">
  main {
    .eyecatch {
      width: 100%;
      aspect-ratio: 3 / 1;
      img {
        width: 100%;
        height: 100%;
        object-fit: cover;
      }
    }
    article {
      @include media-pc {
        width: rem(800);
        margin: rem(120) auto;
        .time {
          font-size: rem(14);
          text-align: right;
        }
        h1 {
          font-size: rem(40);
        }
        .category {
        }
      }
      @include media-sp {
        width: vw(335);
        margin: vw(40) auto;
        h1 {
          font-size: rem(30);
        }
      }
    }
  }
</style>
<style lang="scss" is:global>
  article {
    .content {
      @include media-pc {
        margin-top: rem(80);
        h2 {
          font-size: rem(32);
        }
        h3 {
          font-size: rem(28);
        }
        h4 {
          font-size: rem(24);
        }
        h5 {
          font-size: rem(20);
        }

        a {
          text-decoration: underline;
        }
        strong {
          font-weight: bold;
        }
        u {
          text-decoration: underline;
        }
        s {
          text-decoration: line-through;
        }
        ul {
          li {
            &:before {
              display: inline-block;
              content: "・";
            }
          }
        }
        ol {
          li {

          }
        }
      }
      @include media-sp {
        margin-top: vw(40);
      }
    }
  }
</style>

<script></script>

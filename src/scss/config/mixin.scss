@use "./variables" as *;

// Font -----------------------------------------------
@mixin font-gothic($weight:null) {
  font-family: "Noto Sans JP", "Yu Gothic", "游ゴシック", YuGothic, "游ゴシック体", "ヒラギノ角ゴ Pro W3", "メイリオ", sans-serif;
  font-weight: $weight;
}

@mixin font-serif($weight:null) {
  font-family: "游明朝体", "Yu Mincho", YuMincho, "ヒラギノ明朝 Pro", "Hiragino Mincho Pro", "MS P明朝", "MS PMincho", serif;
  font-weight: $weight;
}

// @mixin font-Poppins($weight:null) {
//   font-family: 'Poppins', sans-serif;
//   font-weight: $weight;
// }

// @mixin font-ZenKakuGothic($weight:null) {
//   font-family: 'Zen Kaku Gothic New', sans-serif;
//   font-weight: $weight;
// }

@mixin font-Lato($weight:null) {
  font-family: 'Lato', sans-serif;
  font-weight: $weight;
}

// media query -----------------------------------------------

// print
@mixin media-print {
  @media only print {
    @content;
  }
}
// 768 ~
@mixin media-pc($max:null) {
  @if $max != null {
    @media print, screen and (min-width: #{$breakpoint-sm + 1}px) and (max-width: #{$max}px) {
      @content;
    }
  }
  @else {
    @media print, screen and (min-width: #{$breakpoint-sm + 1}px) {
      @content;
    }
  }
}

// ~ 768
@mixin media-sp() {
  @media print, screen and (max-width: #{$breakpoint-sm}px) {
    @content;
  }
}

// 768 ~ 1024
@mixin media-md() {
  @media print, screen and (min-width: #{$breakpoint-sm + 1}px) and (max-width: #{$breakpoint-md}px) {
    @content;
  }
}

// 1024 ~ 1280
@mixin media-lg() {
  @media print, screen and (min-width: #{$breakpoint-md + 1}px) and (max-width: #{$breakpoint-lg}px) {
    @content;
  }
}
// 1280 ~ 1680
@mixin media-xl() {
  @media print, screen and (min-width: #{$breakpoint-lg + 1}px) and (max-width: #{$breakpoint-xl}px) {
    @content;
  }
}
// 1680 ~ 9999
@mixin media-xx() {
  @media print, screen and (min-width: #{$breakpoint-xl + 1}px) and (max-width: #{$breakpoint-xx}px) {
    @content;
  }
}
@mixin media($min, $max:null) {
  @if $max != null {
    @media print, screen and (min-width: #{$min}px) and (max-width: #{$max}px) {
      @content;
    }
  }
  @else {
    @media print, screen and (min-width: #{$min}px) {
      @content;
    }
  }
}
@mixin media-IE11() {
  @media (-ms-high-contrast:none) {
    // IE11
    @content;
  }
}

@mixin media-Edge() {
  @media (-ms-high-contrast:none) {
    // Edge
    @content;
  }
}

// utility -----------------------------------------------
@mixin text-justify() {
  text-align: justify;
  text-justify: inter-ideograph;
}

@mixin object-fit-cover() {
  object-fit: cover;
  font-family: 'object-fit: cover;';
}

@mixin bg-contain($path) {
  background: url(#{$path}) center center no-repeat;
  background-size: contain;
  @content;
}

@mixin pie-clearfix {
  &:after {
    content: "";
    display: block;
    clear: both;
  }
}
@mixin hover-alpha($opacity:0.7) {
  transition: opacity 0.3s $easeOutCubic;
  &:hover {
      opacity: $opacity;
  }
}